@inproceedings{StudyofDockerSmells,
  title={Empirical Study of the Docker Smells Impact on the Image Size},
  author={Durieux, Thomas},
  booktitle={Proceedings of the IEEE/ACM 46th International Conference on Software Engineering},
  pages={1--12},
  year={2024}
}

@article{Dockeranalysis,
  title={Analysis of docker security},
  author={Bui, Thanh},
  journal={arXiv preprint arXiv:1501.02967},
  year={2015}
}

@book{softwareEng,
  title={Software engineering},
  author={Aggarwal, KK},
  year={2005},
  publisher={New Age International}
}

@inproceedings{DockerArtifacts,
  title={Assessing and Improving the Quality of Docker Artifacts},
  author={Rosa, Giovanni and Scalabrino, Simone and Oliveto, Rocco},
  booktitle={2022 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  pages={592--596},
  year={2022},
  organization={IEEE}
}

@article{DockerSmellEmpherical,
  title={Fixing dockerfile smells: An empirical study},
  author={Rosa, Giovanni and Zappone, Federico and Scalabrino, Simone and Oliveto, Rocco},
  journal={Empirical Software Engineering},
  volume={29},
  number={5},
  pages={108},
  year={2024},
  publisher={Springer}
}

@book{refactoring,
  title={Refactoring: improving the design of existing code},
  author={Fowler, Martin},
  year={2018},
  publisher={Addison-Wesley Professional}
}

@incollection{canfora2001softwaremaintenance,
  title={Software maintenance},
  author={Canfora, Gerardo and Cimitile, Aniello},
  booktitle={Handbook of Software Engineering and Knowledge Engineering: Volume I: Fundamentals},
  pages={91--120},
  year={2001},
  publisher={World Scientific}
}

@inproceedings{shift-left,
author = {Gonzalez, Danielle and Perez, Paola Peralta and Mirakhorli, Mehdi},
title = {Barriers to Shift-Left Security: The Unique Pain Points of Writing Automated Tests Involving Security Controls},
year = {2021},
isbn = {9781450386654},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3475716.3475786},
doi = {10.1145/3475716.3475786},
abstract = {Background: Automated unit and integration tests allow software development teams to continuously evaluate their application's behavior and ensure requirements are satisfied. Interest in explicitly testing security at the unit and integration levels has risen as more teams begin to shift security left in their workflows, but there is little insight into any potential pain points developers may experience as they learn to adapt their existing skills to write these tests. Aims: Identify security unit and integration testing pain points that could negatively impact efforts to shift security (testing) left to this level. Method: An mixed-method empirical study was conducted on 525 Stack Overflow and Security Stack Exchange posts related to security unit and integration testing. Latent Dirichlet Allocation (LDA) was applied to identify commonly discussed topics, pain points were learned through qualitative analysis, and links were analyzed to study commonly-shared resources. Results: Nine topics representing security controls, components, and scenarios were identified; Authentication was the most commonly tested control. Developers experienced seven pain points unique to security unit and integration testing, which were all influenced by the complexity of security control designs and implementations. Most linked resources were other Q&A posts, but repositories and documentation for security tools and libraries were also common. Conclusions: Developers may experience several unique pain points when writing tests at this level involving security controls. Additional resources are needed to guide developers through these challenges, which should also influence the creation of strategies and tools to help shift security testing to this level. To accelerate this, actionable recommendations for practitioners and future research directions based on these findings are highlighted.},
booktitle = {Proceedings of the 15th ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
articleno = {11},
numpages = {12},
keywords = {Integration Testing, Latent Dirichlet Allocation, Pain Points, Security Testing, Shift-Left Security, Stack Overflow, Unit Testing},
location = {Bari, Italy},
series = {ESEM '21}
}

@inproceedings{hardikar2021containerization,
  title={Containerization: cloud computing based inspiration Technology for Adoption through Docker and Kubernetes},
  author={Hardikar, Sanjay and Ahirwar, Pradeep and Rajan, Sameer},
  booktitle={2021 Second International Conference on Electronics and Sustainable Communication Systems (ICESC)},
  pages={1996--2003},
  year={2021},
  organization={IEEE}
}

@article{sultan2019container,
  title={Container security: Issues, challenges, and the road ahead},
  author={Sultan, Sari and Ahmad, Imtiaz and Dimitriou, Tassos},
  journal={IEEE access},
  volume={7},
  pages={52976--52996},
  year={2019},
  publisher={IEEE}
}

@INPROCEEDINGS{10555789,
  author={Rosa, Giovanni and Scalabrino, Simone and Robles, Gregorio and Oliveto, Rocco},
  booktitle={2024 IEEE/ACM 21st International Conference on Mining Software Repositories (MSR)}, 
  title={Not all Dockerfile Smells are the Same: An Empirical Evaluation of Hadolint Writing Practices by Experts}, 
  year={2024},
  volume={},
  number={},
  pages={231-241},
  keywords={Surveys;Writing;Software;History;Data mining;Empirical Software Engineering;Docker;Code Smells},
  doi={}}

@ARTICLE{CharacterizingtheOccurrenceofDockerfile,
  author={Wu, Yiwen and Zhang, Yang and Wang, Tao and Wang, Huaimin},
  journal={IEEE Access}, 
  title={Characterizing the Occurrence of Dockerfile Smells in Open-Source Software: An Empirical Study}, 
  year={2020},
  volume={8},
  number={},
  pages={34127-34139},
  keywords={Containers;Open source software;Best practices;Databases;Buildings;Docker;Dockerfile smells;Open-source software;GitHub},
  doi={10.1109/ACCESS.2020.2973750}}
@inproceedings{ksontini2021refactorings,
  title={Refactorings and technical debt in docker projects: An empirical study},
  author={Ksontini, Emna and Kessentini, Marouane and Ferreira, Thiago do N and Hassan, Foyzul},
  booktitle={2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  pages={781--791},
  year={2021},
  organization={IEEE}
}

@inproceedings{DevSecOpsCI/CDPipeline,
  title={Implementing and Automating Security Scanning to a DevSecOps CI/CD Pipeline},
  author={Marandi, Manohar and Bertia, A and Silas, Salaja},
  booktitle={2023 World Conference on Communication \& Computing (WCONF)},
  pages={1--6},
  year={2023},
  organization={IEEE}
}

@article{webscraping,
  title={Web scraping or web crawling: State of art, techniques, approaches and application.},
  author={Khder, Moaiad Ahmad},
  journal={International Journal of Advances in Soft Computing \& Its Applications},
  volume={13},
  number={3},
  year={2021}
}

@misc{pypy_2024, title={Requests: HTTP for HumansTM — Requests 2.32.3 documentation}, url={https://requests.readthedocs.io/en/latest/}, journal={Readthedocs.io}, author={pypy}, year={2024} }

‌@article{SQLite,
author = {Gaffney, Kevin P. and Prammer, Martin and Brasfield, Larry and Hipp, D. Richard and Kennedy, Dan and Patel, Jignesh M.},
title = {SQLite: past, present, and future},
year = {2022},
issue_date = {August 2022},
publisher = {VLDB Endowment},
volume = {15},
number = {12},
issn = {2150-8097},
url = {https://doi.org/10.14778/3554821.3554842},
doi = {10.14778/3554821.3554842},
abstract = {In the two decades following its initial release, SQLite has become the most widely deployed database engine in existence. Today, SQLite is found in nearly every smartphone, computer, web browser, television, and automobile. Several factors are likely responsible for its ubiquity, including its in-process design, standalone codebase, extensive test suite, and cross-platform file format. While it supports complex analytical queries, SQLite is primarily designed for fast online transaction processing (OLTP), employing row-oriented execution and a B-tree storage format. However, fueled by the rise of edge computing and data science, there is a growing need for efficient in-process online analytical processing (OLAP). DuckDB, a database engine nicknamed "the SQLite for analytics", has recently emerged to meet this demand. While DuckDB has shown strong performance on OLAP benchmarks, it is unclear how SQLite compares. Furthermore, we are aware of no work that attempts to identify root causes for SQLite's performance behavior on OLAP workloads. In this paper, we discuss SQLite in the context of this changing workload landscape. We describe how SQLite evolved from its humble beginnings to the full-featured database engine it is today. We evaluate the performance of modern SQLite on three benchmarks, each representing a different flavor of in-process data management, including transactional, analytical, and blob processing. We delve into analytical data processing on SQLite, identifying key bottlenecks and weighing potential solutions. As a result of our optimizations, SQLite is now up to 4.2X faster on SSB. Finally, we discuss the future of SQLite, envisioning how it will evolve to meet new demands and challenges.},
journal = {Proc. VLDB Endow.},
month = aug,
pages = {3535–3547},
numpages = {13}
}

@misc{mysql, title={MySQL :: Why MySQL?}, url={https://www.mysql.com/why-mysql/}, journal={www.mysql.com}, author={MYSQL} }

@inproceedings{ConVSVirt,
  title={Comparison of containerization and virtualization in cloud architectures},
  author={Aniruddh, M and Dinkar, Anubhav and Mouli, Shashank C and Sahana, B and Deshpande, Abhay A},
  booktitle={2021 IEEE International Conference on Electronics, Computing and Communication Technologies (CONECCT)},
  pages={1--5},
  year={2021},
  organization={IEEE}
}
@ARTICLE{Virt2013,
  author={Douglis, Fred and Krieger, Orran},
  journal={IEEE Internet Computing}, 
  title={Virtualization}, 
  year={2013},
  volume={17},
  number={2},
  pages={6-9},
  keywords={virtualization;javascript;VLAN;multiclouds},
  doi={10.1109/MIC.2013.42}}

@book{2012virtualization,
  title={Virtualization essentials},
  author={Portnoy, Matthew},
  volume={19},
  year={2012},
  publisher={John Wiley \& Sons}
}

@article{2022containerization,
  title={Containerization technologies: Taxonomies, applications and challenges},
  author={Bentaleb, Ouafa and Belloum, Adam SZ and Sebaa, Abderrazak and El-Maouhab, Aouaouche},
  journal={The Journal of Supercomputing},
  volume={78},
  number={1},
  pages={1144--1181},
  year={2022},
  publisher={Springer}
}

@book{Con2014docker,
  title={The Docker Book: Containerization is the new virtualization},
  author={Turnbull, James},
  year={2014},
  publisher={James Turnbull}
}

@inproceedings{acharya2021docker,
  title={Docker container orchestration management: A review},
  author={Acharya, Jigna N and Suthar, Anil C},
  booktitle={International Conference on Intelligent Vision and Computing},
  pages={140--153},
  year={2021},
  organization={Springer}
}

@ARTICLE{2017Docker,
  author={Anderson, Charles},
  journal={IEEE Software}, 
  title={Docker [Software engineering]}, 
  year={2015},
  volume={32},
  number={3},
  pages={102-c3},
  keywords={Interviews;Virtual machining;Software engineering;Software development;Docker;SE Radio;Software Engineering Radio;James Turnbull;microservices;Docker containers},
  doi={10.1109/MS.2015.62}}
@ARTICLE{securityDocker,
  author={Combe, Theo and Martin, Antony and Di Pietro, Roberto},
  journal={IEEE Cloud Computing}, 
  title={To Docker or Not to Docker: A Security Perspective}, 
  year={2016},
  volume={3},
  number={5},
  pages={54-62},
  keywords={Product life cycle management;Computer security;Cost benefit analysis;Cloud computing;Linux;Containers;Virtual networks;cloud computing;virtualization;containers;Docker;security},
  doi={10.1109/MCC.2016.100}}

 @misc{wilson_2023, title={Hadolint: Complete Guide To Linting Dockerfiles}, url={https://devopscube.com/lint-dockerfiles-using-hadolint/}, journal={DevopsCube}, author={Wilson, Bibin}, year={2023}, month={Oct} }

 @misc{snyk_2024, title={Scan your Dockerfile | Snyk User Docs}, url={https://docs.snyk.io/scan-with-snyk/snyk-container/scan-your-dockerfile}, journal={Snyk.io}, author={Snyk}, year={2024} }

@INPROCEEDINGS{snyk2023,
  author={Marandi, Manohar and Bertia, A. and Silas, Salaja},
  booktitle={2023 World Conference on Communication \& Computing (WCONF)}, 
  title={Implementing and Automating Security Scanning to a DevSecOps CI/CD Pipeline}, 
  year={2023},
  volume={},
  number={},
  pages={1-6},
  keywords={Industries;Pipelines;Containers;Application security;Software;Real-time systems;Security;Security Scanning;DevSecOps;Continuous Integration and Continuous Deployment (CICD);Static application security testing(SAST);Dynamic application security testing (DAST)},
  doi={10.1109/WCONF58270.2023.10235015}}

 @article{CI/CD2020, title={Implementation of a Continuous Integration and Deployment Pipeline for Containerized Applications in Amazon Web Services Using Jenkins, Ansible and Kubernetes}, DOI={https://doi.org/10.1109/roedunet51892.2020.9324857}, journal={2020 19th RoEduNet Conference: Networking in Education and Research (RoEduNet)}, publisher={IEEE}, author={Cepuc, Artur and Botez, Robert and Craciun, Ovidiu and Ivanciu, Iustin-Alexandru and Dobrota, Virgil}, year={2020}, month={Dec}, pages={1–6} }

@book{2022continuous,
  title={Continuous Delivery with Docker and Jenkins: Create secure applications by building complete CI/CD pipelines},
  author={Leszko, Rafal},
  year={2022},
  publisher={Packt Publishing Ltd}
}
 @misc{docker_cont, title={What is a Container?}, url={https://www.docker.com/resources/what-container/}, journal={Docker}, author={Docker}, year={2023} }

 @misc{docker_conttainer_where, title = {difference between containers and virtual machines}, url={https://dockerlabs.collabnix.com/beginners/difference-vm-containers.html}, journal={dockerlabs},author={Docker}, year={2023 }}

@book{schenker2020learn,
  title={Learn Docker--Fundamentals of Docker 19. x: Build, test, ship, and run containers with Docker and Kubernetes},
  author={Schenker, Gabriel N},
  year={2020},
  publisher={Packt Publishing Ltd}
}